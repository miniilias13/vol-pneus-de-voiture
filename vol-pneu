-- Script : Vol de pneus pour FiveM

-- Configuration
local volDePneu = {
    tempsPourVoler = 10000, -- Temps pour voler un pneu en millisecondes (10 secondes)
    objetsNecessaires = "clé_décrou", -- Nom de l'objet nécessaire dans l'inventaire
    recompense = "pneu_usé", -- Objet obtenu après le vol
    notificationDistance = 20.0 -- Distance à laquelle les autres joueurs sont notifiés
}

-- Fonction pour vérifier l'objet dans l'inventaire
local function VerifierObjet(player, objet)
    -- Remplacer cette partie par la vérification de votre système d'inventaire
    return true -- Modifier selon votre système d'inventaire
end

-- Fonction pour notifier les joueurs proches
local function NotifierProches(player, coords, distance)
    TriggerClientEvent('VolDePneu:NotificationProches', -1, player, coords, distance)
end

-- Fonction pour notifier la police
local function NotifierPolice(coords)
    local policePlayers = GetPlayersWithJob("police") -- À adapter selon votre système de métiers
    for _, policePlayer in ipairs(policePlayers) do
        TriggerClientEvent('chat:addMessage', policePlayer, { args = { "^1Alerte Police", "Un vol de pneus est en cours près de ces coordonnées : " .. coords.x .. ", " .. coords.y } })
    end
end

-- Commande pour commencer le vol
RegisterCommand("volerpneu", function(source)
    local player = source
    local ped = GetPlayerPed(player)
    local veh = GetVehiclePedIsIn(ped, false)

    if veh ~= 0 then
        TriggerClientEvent('chat:addMessage', player, { args = { "^1Erreur", "Sortez d'abord du véhicule pour voler un pneu." } })
        return
    end

    local vehCible = GetVehiclePedIsTryingToEnter(ped)
    if vehCible == 0 then
        TriggerClientEvent('chat:addMessage', player, { args = { "^1Erreur", "Aucune voiture ciblée pour voler un pneu." } })
        return
    end

    if VerifierObjet(player, volDePneu.objetsNecessaires) then
        TriggerClientEvent('chat:addMessage', player, { args = { "^2Info", "Début du vol des pneus..." } })

        -- Animation et progression
        TriggerClientEvent('VolDePneu:DebutVol', player, volDePneu.tempsPourVoler)
        Citizen.Wait(volDePneu.tempsPourVoler)

        -- Récompense après vol
        TriggerClientEvent('chat:addMessage', player, { args = { "^2Succès", "Vous avez volé un pneu !" } })
        TriggerClientEvent('inventory:addItem', player, volDePneu.recompense, 1)

        -- Notifications
        local coords = GetEntityCoords(ped)
        NotifierProches(player, coords, volDePneu.notificationDistance)
        NotifierPolice(coords)
    else
        TriggerClientEvent('chat:addMessage', player, { args = { "^1Erreur", "Vous n'avez pas l'outil nécessaire pour voler un pneu." } })
    end
end, false)

-- Côté client : Gestion des animations et notifications
RegisterNetEvent('VolDePneu:DebutVol')
AddEventHandler('VolDePneu:DebutVol', function(duree)
    local ped = PlayerPedId()
    TaskStartScenarioInPlace(ped, "WORLD_HUMAN_WELDING", 0, true)
    Citizen.Wait(duree)
    ClearPedTasksImmediately(ped)
end)

RegisterNetEvent('VolDePneu:NotificationProches')
AddEventHandler('VolDePneu:NotificationProches', function(player, coords, distance)
    local ped = PlayerPedId()
    local pedCoords = GetEntityCoords(ped)
    if #(pedCoords - coords) <= distance then
        TriggerEvent('chat:addMessage', { args = { "^3Alerte", "Quelqu'un est en train de voler les pneus d'une voiture près de vous !" } })
    end
end)

-- Fonction fictive pour récupérer les joueurs policiers (à adapter selon votre framework)
function GetPlayersWithJob(jobName)
    local players = {}
    for _, playerId in ipairs(GetPlayers()) do
        -- Vérifiez le métier du joueur ici
        local job = "police" -- Remplacez par la vérification réelle du métier
        if job == jobName then
            table.insert(players, playerId)
        end
    end
    return players
end
